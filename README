
/*******************************************
 *   Copyright (C) 2022 by Ben F McLean    *
 *   drbenmclean@gmail.com                 *
 *                                         *
 ******************************************/

README:

This repo contains a computational chemistry project I programmed in C++. The included compchem.cpp file compiles to an example experiment of burning carbon in oxygen. One run of this experiment has been saved as a video file (example_burning_carbon.mp4, imaged in Paraview, paraview.org), in which carbon (red) is burning in oxygen (blue). The colour of the atoms reflects charge, and their size reflects their atomic weight. The simulation was highly realistic, spontaneously producing the correct reaction products. It mainly produced carbon dioxide, as expected for this reaction. However the simulation also produced the transient oxide carbon trioxide, which is unstable, and as shown in the simulation quickly decayed to carbon dioxide as soon as the appropriate atoms/molecules were available. The simulation also realistically produced the poisonous gas carbon monoxide, which is why we use rangehoods over gas stoves!

One of the challenges of this project was accounting for repulsion between atoms at close distances, due to electron cloud overlap and the Pauli exclusion principle. Modelling this is necessary, as otherwise, dissimilar-charged ions will attract indefinitely, until they occupy the same space. I modelled Pauli repulsion using an exponential function, which allows electrostatic forces due to the Coulomb effect to dominate at distances greater than a chosen equilibrium bond length (the distance between the nuclei of two bonded atoms), and for Pauli repulsion to rapidly increase at distances shorter than this bond length. This allows for ions to move together and form an ionic bond, but remain realistically distinct. An alternate approach to this empirically-chosen equation might be to model the Lennard-Jones potential. Maybe another day!

compile the program with
make re

If you have pvpython installed you can make and run the whole project, including building a video of your experiment, using
sh runproj.sh


